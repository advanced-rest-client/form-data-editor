/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   form-data-editor.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {html, css, LitElement} from 'lit-element';

import {ValidatableMixin} from '@anypoint-web-components/validatable-mixin/validatable-mixin.js';

import {PayloadParserMixin} from '@advanced-rest-client/payload-parser-mixin/payload-parser-mixin.js';

import {ApiFormMixin} from '@api-components/api-form-mixin/api-form-mixin.js';

declare namespace UiElements {

  /**
   * An element to edit form data (x-www-form-urlencoded).
   */
  class FormDataEditor extends
    ValidatableMixin(
    ApiFormMixin(
    PayloadParserBehavior(
    Object))) {
    model: any;

    /**
     * The editor value
     */
    value: string|null|undefined;
    onmodel: Function|null;
    onchange: Function|null;

    /**
     * Prohibits rendering of the documentation (the icon and the
     * description).
     */
    noDocs: boolean|null|undefined;

    /**
     * Enables Anypoint legacy styling
     */
    legacy: boolean|null|undefined;

    /**
     * Enables Material Design outlined style
     */
    outlined: boolean|null|undefined;

    /**
     * When set the editor is in read only mode.
     */
    readOnly: boolean|null|undefined;

    /**
     * When set all controls are disabled in the form
     */
    disabled: boolean|null|undefined;
    _formRowTemplate(item: any, index: any): any;
    render(): any;

    /**
     * Registers an event handler for given type
     *
     * @param eventType Event type (name)
     * @param value The handler to register
     */
    _registerCallback(eventType: String|null, value: Function|null): void;

    /**
     * Appends an empty header to the list.
     */
    add(): void;

    /**
     * Encodes the payload
     */
    _encodePaylod(): void;

    /**
     * Decodes the payload
     */
    _decodePaylod(): void;

    /**
     * Computes for item class.
     *
     * @param item Model for form item
     */
    _computeItemClass(item: object|null, narrow: Boolean|null, allowHideOptional: Boolean|null, optionalOpened: Boolean|null, allowDisableParams: Boolean|null): String|null;

    /**
     * Updates the value when model changes.
     */
    _updateValue(): void;

    /**
     * Updates the model from value, if not cause by internal setters.
     */
    _valueChanged(value: String|null): void;

    /**
     * Creates a model item from parser's name => value pairs.
     *
     * @param param Object with `value` and `name` properties.
     */
    _paramToModel(param: object|null): void;
    _optionalHanlder(e: any): void;
    _enableCheckedHandler(e: any): void;
    _valueChangeHanlder(e: any): void;
    _nameChangeHanlder(e: any): void;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "form-data-editor": UiElements.FormDataEditor;
  }
}
