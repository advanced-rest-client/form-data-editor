/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   form-data-editor-item.html
 */

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../polymer/types/lib/elements/dom-if.d.ts" />
/// <reference path="../arc-icons/arc-icons.d.ts" />
/// <reference path="../iron-flex-layout/iron-flex-layout.d.ts" />
/// <reference path="../iron-collapse/iron-collapse.d.ts" />
/// <reference path="../paper-input/paper-input.d.ts" />
/// <reference path="../paper-icon-button/paper-icon-button.d.ts" />
/// <reference path="../marked-element/marked-element.d.ts" />
/// <reference path="../markdown-styles/markdown-styles.d.ts" />
/// <reference path="../api-form-mixin/api-form-styles.d.ts" />
/// <reference path="../api-property-form-item/api-property-form-item.d.ts" />

/**
 * An element that renders form controls for the editor.
 *
 * ### Styling
 *
 * `<form-data-editor-item>` provides the following custom properties and mixins for styling:
 *
 * Custom property | Description | Default
 * ----------------|-------------|----------
 * `--form-data-editor-item` | Mixin applied to the element | `{}`
 * `--api-form-name-input` | Mixin applied to custom item name input field | `{}`
 * `--api-form-name-input-narrow` | Mixin applied to custom item name input field when narrow | `{}`
 *
 * Properies inheritet from `api-form-styles`
 *
 * Custom property | Description | Default
 * ----------------|-------------|----------
 * `--api-form-row` | Mixin applied to API form rows. Each row already applies `--layout-horizontal` and `--layout-start` | `{}`
 * `--api-form-row-narrow` | Mixin applied to API form rows when `narrow` property is set | `{}`
 * `--api-form-row-optional` | Mixin applied to optional row of the form (not required). By default this form row is hidden from the view | `{}`
 * `--api-form-row-optional-visible` | Mixin applied to optional row of the form when it becomes visible | `{}`
 * `--api-form-action-button-color` | Color of the action button in the form. Action buttons should perform form's primary actions like "submit" or "add new". Use `--api-form-action-icon-*` for icons related styling | `--secondary-button-color` or `--accent-color`
 * `--api-form-action-button-background-color` | Similar to `--api-form-action-button-color` but it's background color | `--secondary-button-background`
 * `--secondary-button` | Mixin applied to the action button. This is more general theme element. This values can be overriten by `--api-form-action-button` | `{}`
 * `--api-form-action-button` | Mixin applied to the action button | `{}`
 * `--api-form-action-button-hover-color` | Color of the action button in the form when hovering. | `--secondary-button-color` or `--accent-color`
 * `--api-form-action-button-hover-background-color` | Similar to `--api-form-action-button-hover-color` but it's background color | `--secondary-button-background`
 * `--secondary-button-hover` | Mixin applied to the action button when hovered. This is more general theme element. This values can be overriten by `--api-form-action-button` | `{}`
 * `--api-form-action-button-hover` | Mixin applied to the action button when hovered. | `{}`
 * `--hint-trigger-color` | Color of the form action icon button to dispay documentation for the item. | `rgba(0, 0, 0, 0.74)`
 * `--icon-button` | Mixin applied to the icon button to dispay documentation for the item | `{}`
 * `--hint-trigger-hover-color` | Color of the form action icon button to dispay documentation for the item when hovered | `rgba(0, 0, 0, 0.74)`
 * `--icon-button-hover` | Mixin applied to the icon button to dispay documentation for the item when hovered | `{}`
 * `--api-form-action-icon-color` | Color of any other than documentation icon button in form row | `--icon-button-color` or `rgba(0, 0, 0, 0.74)`
 * `--api-form-action-icon-hover-color` | Color of any other than documentation icon button in form row when hovering | `--accent-color` or `rgba(0, 0, 0, 0.88)`
 * `--inline-documentation-background-color` | Background color of the documentation element. | `#FFF3E0`
 * `--inline-documentation-color` | Color of the documentation element | `rgba(0, 0, 0, 0.87)`
 * `--inline-documentation-font-size` | Font size of the documentaiton element | `13px`
 */
declare class FormDataEditorItem extends Polymer.Element {

  /**
   * The name of this element.
   */
  name: string|null|undefined;

  /**
   * The value of this element.
   */
  value: string|null|undefined;

  /**
   * A model item
   */
  model: object|null|undefined;

  /**
   * If set it renders a narrow layout
   */
  narrow: boolean|null|undefined;

  /**
   * True to render documentation (if set in model)
   */
  docsOpened: boolean|null|undefined;

  /**
   * Computed value passed to the inputs.
   * If true then floating labels are not displayed.
   * Floating labels are visible only for narrow layout.
   */
  readonly noLabelFloat: boolean|null|undefined;

  /**
   * Set if the header is not specified in the RAML type (is a custom
   * header).
   */
  isCustom: boolean|null|undefined;

  /**
   * If set it is render the item control as an array item (adds more
   * spacing to the element)
   */
  isArray: boolean|null|undefined;

  /**
   * True when this model is required
   */
  required: boolean|null|undefined;

  /**
   * Computes css class name for narrow layout
   */
  _computeNarrowClass(narrow: any): any;

  /**
   * Computes `noLabelFloat` property
   */
  _computeNoLabelFloat(narrow: any): any;

  /**
   * Toggles documentation (if available)
   */
  toggleDocumentation(): void;

  /**
   * Dispatches `remove` custom event that does not bubbles to inform the editor
   * to delete this parameter.
   */
  _remove(): void;
}

interface HTMLElementTagNameMap {
  "form-data-editor-item": FormDataEditorItem;
}
